<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.niu.mapper.TActivityMapper">
  <resultMap id="BaseResultMap" type="com.niu.model.TActivity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="owner_id" jdbcType="INTEGER" property="ownerId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="cost" jdbcType="DECIMAL" property="cost" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
    <result column="edit_time" jdbcType="TIMESTAMP" property="editTime" />
    <result column="edit_by" jdbcType="INTEGER" property="editBy" />
  </resultMap>

  <resultMap id="ActivityResultMap" type="com.niu.model.TActivity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="owner_id" jdbcType="INTEGER" property="ownerId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="cost" jdbcType="DECIMAL" property="cost" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
    <result column="edit_time" jdbcType="TIMESTAMP" property="editTime" />
    <result column="edit_by" jdbcType="INTEGER" property="editBy" />

    <!--一对一关联，负责人-->
    <association property="ownerDO" javaType="com.niu.model.TUser">
      <id column="ownerId" jdbcType="INTEGER" property="id"/>
      <result column="ownerName" jdbcType="VARCHAR" property="name"/>
    </association>
    <!--一对一关联，创建人-->
    <association property="createByDO" javaType="com.niu.model.TUser">
      <id column="createById" jdbcType="INTEGER" property="id"/>
      <result column="createByName" jdbcType="VARCHAR" property="name"/>
    </association>
    <!--一对一关联，编辑人-->
    <association property="editByDO" javaType="com.niu.model.TUser">
      <id column="editById" jdbcType="INTEGER" property="id"/>
      <result column="editByName" jdbcType="VARCHAR" property="name"/>
    </association>
  </resultMap>

  <sql id="Base_Column_List">
    id, owner_id, `name`, start_time, end_time, cost, description, create_time, create_by, 
    edit_time, edit_by
  </sql>

  <select id="selectActivityByPage" resultMap="ActivityResultMap">
    select
    ta.*,
    tu.id as ownerId, tu.name as ownerName
    from t_activity ta
    left join t_user tu on ta.owner_id = tu.id
    <where>
      <if test="ownerId != null">
        and ta.owner_id = #{ownerId}
      </if>
      <if test="name != null">
        and ta.name like concat('%', #{name}, '%')
      </if>
      <if test="startTime != null">
        and ta.start_time >= #{startTime}
      </if>
      <if test="endTime != null">
        <![CDATA[     and ta.end_time <= #{endTime}     ]]>
      </if>
      <if test="cost != null">
        and ta.cost >= #{cost}
      </if>
      <if test="createTime != null">
        and ta.create_time >= #{createTime}
      </if>
      ${filterSQL}
    </where>
  </select>

  <select id="selectDetailByPrimaryKey" parameterType="java.lang.Integer" resultMap="ActivityResultMap">
    select 
        ta.*,
        tu1.id ownerId, tu1.name ownerName,
        tu2.id createById, tu2.name createByName,
        tu3.id editById, tu3.name editByName
    from t_activity ta left join t_user tu1 on ta.owner_id = tu1.id
                       left join t_user tu2 on ta.create_by = tu2.id
                       left join t_user tu3 on ta.edit_by = tu3.id
    where ta.id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectOngoingActivity" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from t_activity
    <![CDATA[     where end_time >= now() and start_time <= now()     ]]>
  </select>

  <select id="selectActivityBarChartData" resultType="com.niu.result.MonthCount">
    select date_format(start_time, '%y年-%m月') as month, count(*) as count
    from t_activity
    group by date_format(start_time, '%y年-%m月')
    order by min(start_time);
  </select>

  <select id="selectByCount" resultType="java.lang.Integer">
    select
        count(0)
    from t_activity
  </select>

  <!--批量删除，带级联-->
  <delete id="deleteByActivityIdArray" parameterType="java.util.List">
    delete t_activity, t_activity_remark
    from t_activity
            left join t_activity_remark on t_activity.id = t_activity_remark.activity_id
    where t_activity.id in
    <foreach collection="activityIdArray" item="id" open="(" close=")" separator=",">
      #{id,jdbcType=INTEGER}
    </foreach>
  </delete>


<!--  需要修改数据库外键约束为级联才能级联删除-->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete t_activity, t_activity_remark
    from t_activity
           left join t_activity_remark on t_activity.id = t_activity_remark.activity_id
    where t_activity.id = #{id,jdbcType=INTEGER}
  </delete>

<!--  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">-->
<!--    delete from t_activity-->
<!--    where id = #{id,jdbcType=INTEGER}-->
<!--  </delete>-->

  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.niu.model.TActivity" useGeneratedKeys="true">
    insert into t_activity (owner_id, `name`, start_time, 
      end_time, cost, description, 
      create_time, create_by, edit_time, 
      edit_by)
    values (#{ownerId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{cost,jdbcType=DECIMAL}, #{description,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=INTEGER}, #{editTime,jdbcType=TIMESTAMP}, 
      #{editBy,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.niu.model.TActivity" useGeneratedKeys="true">
    insert into t_activity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ownerId != null">
        owner_id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="cost != null">
        cost,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="editTime != null">
        edit_time,
      </if>
      <if test="editBy != null">
        edit_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ownerId != null">
        #{ownerId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=DECIMAL},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="editTime != null">
        #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editBy != null">
        #{editBy,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.niu.model.TActivity">
    update t_activity
    <set>
      <if test="ownerId != null">
        owner_id = #{ownerId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cost != null">
        cost = #{cost,jdbcType=DECIMAL},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="editTime != null">
        edit_time = #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editBy != null">
        edit_by = #{editBy,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.niu.model.TActivity">
    update t_activity
    set owner_id = #{ownerId,jdbcType=INTEGER},
      `name` = #{name,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      cost = #{cost,jdbcType=DECIMAL},
      description = #{description,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=INTEGER},
      edit_time = #{editTime,jdbcType=TIMESTAMP},
      edit_by = #{editBy,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>